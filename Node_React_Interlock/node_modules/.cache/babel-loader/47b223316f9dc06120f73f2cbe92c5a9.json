{"ast":null,"code":"var _jsxFileName = \"/Users/lgh12/Web/Interlock_Project/Node_React_Interlock/src/components/Body/Create.js\";\nimport React, { Component } from 'react';\nimport '../css/Create.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n    this.Gettitles = this.Gettitles.bind(this);\n    this.SendPostdata = this.SendPostdata.bind(this);\n  }\n\n  Gettitles() {\n    return this.props.topics.map(topic => /*#__PURE__*/_jsxDEV(\"button\", {\n      //onClick={this.titleClick.bind(this, topic.title)}\n      value: topic.id,\n      onClick: function (e) {\n        e.preventDefault();\n        this.props.onChangePage(e.target.value);\n      }.bind(this),\n      children: [topic.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 49\n    }, this));\n  }\n\n  SendPostdata(_data, _url) {\n    axios({\n      method: 'post',\n      url: _url,\n      data: {\n        title: _data.title,\n        description: _data.description\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-left\",\n        children: [\" \", this.Gettitles(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-create\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"http://localhost:3001/create_process\",\n            method: \"post\"\n            /**\n             * submit 버튼을 클릭했을 때, submit 버튼을 포함하고 있는 form 태그 내부 OnSubmit을 호출하게 된다.\n             *\n             * e.preventDefault() 함수를 쓰면 화면이 /create_process로 이동되는 것을 방지해 준다.\n             *\n             * 현재 우리는 page 전환 없이 만들려고하는 중\n             *  */\n            ,\n            onSubmit: function (e) {\n              // onSubmit의 e.target property는 form data를 담고 있다.\n              // props인 _title, _desc에 아래 e.target.title.value, e.target.desc.value를 넘겨준다.\n              this.props.onSubmit(e.target.title.value, e.target.desc.value); // POST 요청 전송\n\n              this.SendPostdata({\n                title: e.target.title.value,\n                description: e.target.desc.value\n              }, 'http://localhost:3001/create_process');\n            }.bind(this),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                placeholder: \"title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"desc\",\n                placeholder: \"description\",\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 13\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 72\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["/Users/lgh12/Web/Interlock_Project/Node_React_Interlock/src/components/Body/Create.js"],"names":["React","Component","axios","Create","constructor","props","Gettitles","bind","SendPostdata","topics","map","topic","id","e","preventDefault","onChangePage","target","value","title","_data","_url","method","url","data","description","render","onSubmit","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../css/Create.css'\nimport axios from 'axios'\n\nclass Create extends Component {\n    constructor(props) {\n        super(props)\n\n        this.Gettitles = this.Gettitles.bind(this)\n        this.SendPostdata = this.SendPostdata.bind(this)\n    }\n    Gettitles() {\n        return this.props.topics.map(topic => ( <\n            button\n            //onClick={this.titleClick.bind(this, topic.title)}\n            value = { topic.id }\n            onClick = {\n                function(e) {\n                    e.preventDefault()\n                    this.props.onChangePage(e.target.value)\n                }.bind(this)\n            } >\n            { topic.title } <\n            /button>\n        ))\n    }\n    SendPostdata(_data, _url) {\n        axios({\n            method: 'post',\n            url: _url,\n            data: {\n                title: _data.title,\n                description: _data.description,\n            },\n        })\n    }\n    render() {\n        return ( <\n            div className = \"body-container\" >\n            <\n            div className = \"body-left\" > { this.Gettitles() } < /div> <\n            div className = \"body-right\" >\n            <\n            div className = \"body-create\" >\n            <\n            form action = \"http://localhost:3001/create_process\"\n            method = \"post\"\n            /**\n             * submit 버튼을 클릭했을 때, submit 버튼을 포함하고 있는 form 태그 내부 OnSubmit을 호출하게 된다.\n             *\n             * e.preventDefault() 함수를 쓰면 화면이 /create_process로 이동되는 것을 방지해 준다.\n             *\n             * 현재 우리는 page 전환 없이 만들려고하는 중\n             *  */\n            onSubmit = {\n                function(e) {\n                    // onSubmit의 e.target property는 form data를 담고 있다.\n                    // props인 _title, _desc에 아래 e.target.title.value, e.target.desc.value를 넘겨준다.\n                    this.props.onSubmit(e.target.title.value, e.target.desc.value)\n                        // POST 요청 전송\n                    this.SendPostdata({\n                            title: e.target.title.value,\n                            description: e.target.desc.value,\n                        },\n                        'http://localhost:3001/create_process'\n                    )\n                }.bind(this)\n            } >\n            <\n            p >\n            <\n            input type = \"text\"\n            name = \"title\"\n            placeholder = \"title\" / >\n            <\n            /p> <\n            p >\n            <\n            textarea name = \"desc\"\n            placeholder = \"description\" > < /textarea> <\n            /p> <\n            p >\n            <\n            input type = \"submit\" / >\n            <\n            /p> <\n            /form> <\n            /div> <\n            /div> <\n            /div>\n        )\n    }\n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}